{"ast":null,"code":"import axios from 'axios';\n\n// API base URL - adjust this based on your backend setup\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 300000,\n  // 5 minutes for video processing\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    // Server responded with error status\n    const {\n      status,\n      data\n    } = error.response;\n    throw new Error(data.error || `Server error: ${status}`);\n  } else if (error.request) {\n    // Request made but no response received\n    throw new Error('No response from server. Please check your connection.');\n  } else {\n    // Something else happened\n    throw new Error(error.message || 'An unexpected error occurred');\n  }\n});\n\n// API functions\nexport const apiService = {\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/api/health');\n    return response.data;\n  },\n  // Generate script from prompt\n  generateScript: async (prompt, duration = 30) => {\n    const response = await api.post('/api/generate-script', {\n      prompt,\n      duration\n    });\n    return response.data;\n  },\n  // Generate audio from script\n  generateAudio: async (script, voice = 'default') => {\n    const response = await api.post('/api/generate-audio', {\n      script,\n      voice\n    });\n    return response.data;\n  },\n  // Upload video file\n  uploadVideo: async (file, onProgress = null) => {\n    const formData = new FormData();\n    formData.append('video', file);\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    if (onProgress) {\n      config.onUploadProgress = progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        onProgress(percentCompleted);\n      };\n    }\n    const response = await api.post('/api/upload-video', formData, config);\n    return response.data;\n  },\n  // Add overlay to video\n  addOverlay: async (videoFilename, script, audioFilename = null, overlayText = null) => {\n    const response = await api.post('/api/add-overlay', {\n      video_filename: videoFilename,\n      script,\n      audio_filename: audioFilename,\n      overlay_text: overlayText\n    });\n    return response.data;\n  },\n  // Get processing status\n  getProcessingStatus: async processId => {\n    const response = await api.get(`/api/processing-status/${processId}`);\n    return response.data;\n  },\n  // Download file\n  downloadFile: async filename => {\n    const response = await api.get(`/api/download/${filename}`, {\n      responseType: 'blob'\n    });\n    return response;\n  },\n  // Get preview URL\n  getPreviewUrl: filename => {\n    return `${API_BASE_URL}/api/preview/${filename}`;\n  },\n  // Get download URL\n  getDownloadUrl: filename => {\n    return `${API_BASE_URL}/api/download/${filename}`;\n  }\n};\n\n// Utility functions\nexport const fileUtils = {\n  // Format file size\n  formatFileSize: bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  },\n  // Format duration\n  formatDuration: seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  },\n  // Validate video file\n  isValidVideoFile: file => {\n    const validTypes = ['video/mp4', 'video/mov', 'video/avi', 'video/mkv'];\n    return validTypes.includes(file.type);\n  },\n  // Get file extension\n  getFileExtension: filename => {\n    return filename.split('.').pop().toLowerCase();\n  }\n};\n\n// Error handling utility\nexport const handleApiError = (error, defaultMessage = 'An error occurred') => {\n  console.error('API Error:', error);\n  return error.message || defaultMessage;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","Error","message","apiService","healthCheck","get","generateScript","prompt","duration","post","generateAudio","script","voice","uploadVideo","file","onProgress","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","addOverlay","videoFilename","audioFilename","overlayText","video_filename","audio_filename","overlay_text","getProcessingStatus","processId","downloadFile","filename","responseType","getPreviewUrl","getDownloadUrl","fileUtils","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","formatDuration","seconds","mins","secs","toString","padStart","isValidVideoFile","validTypes","includes","type","getFileExtension","split","pop","toLowerCase","handleApiError","defaultMessage"],"sources":["/Users/kaushiknag/Desktop/hackathons/sdg-platform/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// API base URL - adjust this based on your backend setup\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 300000, // 5 minutes for video processing\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error);\n    \n    if (error.response) {\n      // Server responded with error status\n      const { status, data } = error.response;\n      throw new Error(data.error || `Server error: ${status}`);\n    } else if (error.request) {\n      // Request made but no response received\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      // Something else happened\n      throw new Error(error.message || 'An unexpected error occurred');\n    }\n  }\n);\n\n// API functions\nexport const apiService = {\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/api/health');\n    return response.data;\n  },\n\n  // Generate script from prompt\n  generateScript: async (prompt, duration = 30) => {\n    const response = await api.post('/api/generate-script', {\n      prompt,\n      duration,\n    });\n    return response.data;\n  },\n\n  // Generate audio from script\n  generateAudio: async (script, voice = 'default') => {\n    const response = await api.post('/api/generate-audio', {\n      script,\n      voice,\n    });\n    return response.data;\n  },\n\n  // Upload video file\n  uploadVideo: async (file, onProgress = null) => {\n    const formData = new FormData();\n    formData.append('video', file);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    if (onProgress) {\n      config.onUploadProgress = (progressEvent) => {\n        const percentCompleted = Math.round(\n          (progressEvent.loaded * 100) / progressEvent.total\n        );\n        onProgress(percentCompleted);\n      };\n    }\n\n    const response = await api.post('/api/upload-video', formData, config);\n    return response.data;\n  },\n\n  // Add overlay to video\n  addOverlay: async (videoFilename, script, audioFilename = null, overlayText = null) => {\n    const response = await api.post('/api/add-overlay', {\n      video_filename: videoFilename,\n      script,\n      audio_filename: audioFilename,\n      overlay_text: overlayText,\n    });\n    return response.data;\n  },\n\n  // Get processing status\n  getProcessingStatus: async (processId) => {\n    const response = await api.get(`/api/processing-status/${processId}`);\n    return response.data;\n  },\n\n  // Download file\n  downloadFile: async (filename) => {\n    const response = await api.get(`/api/download/${filename}`, {\n      responseType: 'blob',\n    });\n    return response;\n  },\n\n  // Get preview URL\n  getPreviewUrl: (filename) => {\n    return `${API_BASE_URL}/api/preview/${filename}`;\n  },\n\n  // Get download URL\n  getDownloadUrl: (filename) => {\n    return `${API_BASE_URL}/api/download/${filename}`;\n  },\n};\n\n// Utility functions\nexport const fileUtils = {\n  // Format file size\n  formatFileSize: (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  },\n\n  // Format duration\n  formatDuration: (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  },\n\n  // Validate video file\n  isValidVideoFile: (file) => {\n    const validTypes = ['video/mp4', 'video/mov', 'video/avi', 'video/mkv'];\n    return validTypes.includes(file.type);\n  },\n\n  // Get file extension\n  getFileExtension: (filename) => {\n    return filename.split('.').pop().toLowerCase();\n  },\n};\n\n// Error handling utility\nexport const handleApiError = (error, defaultMessage = 'An error occurred') => {\n  console.error('API Error:', error);\n  return error.message || defaultMessage;\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}